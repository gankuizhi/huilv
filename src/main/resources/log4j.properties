#根logger设置
log4j.rootLogger = INFO,console,file

### 输出信息到控制台###
log4j.appender.console = org.apache.log4j.ConsoleAppender
log4j.appender.console.Target = System.out
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern = [%p] %d{yyyy-MM-dd HH:mm:ss} [%t] method: %l ----%m%n

###输出INFO 级别以上的日志文件设置###?
log4j.appender.file = org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File = target/phoenix-interface.log
log4j.appender.file.Append = true
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%t]method: %l  - [ %p ]----%m%n


#mybatis显示SQL语句日志配置
#log4j.logger.com.mybatis=DEBUG
#指定含有映射文件的包名来显示SQL语句日志配置
log4j.logger.com.demo=DEBUG
#com.zsj.Customer.Mapper为包名，可以根据自己的需求更改
#可以单指一个Mapper接口输入执行sql语句
#log4j.logger.com.tbs.bill.Mapper.billMapper=DEBUG

#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
