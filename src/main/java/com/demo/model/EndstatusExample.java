package com.demo.model;

import java.util.ArrayList;
import java.util.List;

public class EndstatusExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public EndstatusExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andChongguIsNull() {
            addCriterion("chonggu is null");
            return (Criteria) this;
        }

        public Criteria andChongguIsNotNull() {
            addCriterion("chonggu is not null");
            return (Criteria) this;
        }

        public Criteria andChongguEqualTo(String value) {
            addCriterion("chonggu =", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguNotEqualTo(String value) {
            addCriterion("chonggu <>", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguGreaterThan(String value) {
            addCriterion("chonggu >", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguGreaterThanOrEqualTo(String value) {
            addCriterion("chonggu >=", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguLessThan(String value) {
            addCriterion("chonggu <", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguLessThanOrEqualTo(String value) {
            addCriterion("chonggu <=", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguLike(String value) {
            addCriterion("chonggu like", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguNotLike(String value) {
            addCriterion("chonggu not like", value, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguIn(List<String> values) {
            addCriterion("chonggu in", values, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguNotIn(List<String> values) {
            addCriterion("chonggu not in", values, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguBetween(String value1, String value2) {
            addCriterion("chonggu between", value1, value2, "chonggu");
            return (Criteria) this;
        }

        public Criteria andChongguNotBetween(String value1, String value2) {
            addCriterion("chonggu not between", value1, value2, "chonggu");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(String value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(String value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(String value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(String value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(String value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(String value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLike(String value) {
            addCriterion("price like", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotLike(String value) {
            addCriterion("price not like", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<String> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<String> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(String value1, String value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(String value1, String value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andChongstatusIsNull() {
            addCriterion("chongstatus is null");
            return (Criteria) this;
        }

        public Criteria andChongstatusIsNotNull() {
            addCriterion("chongstatus is not null");
            return (Criteria) this;
        }

        public Criteria andChongstatusEqualTo(Integer value) {
            addCriterion("chongstatus =", value, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusNotEqualTo(Integer value) {
            addCriterion("chongstatus <>", value, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusGreaterThan(Integer value) {
            addCriterion("chongstatus >", value, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("chongstatus >=", value, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusLessThan(Integer value) {
            addCriterion("chongstatus <", value, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusLessThanOrEqualTo(Integer value) {
            addCriterion("chongstatus <=", value, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusIn(List<Integer> values) {
            addCriterion("chongstatus in", values, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusNotIn(List<Integer> values) {
            addCriterion("chongstatus not in", values, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusBetween(Integer value1, Integer value2) {
            addCriterion("chongstatus between", value1, value2, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andChongstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("chongstatus not between", value1, value2, "chongstatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusIsNull() {
            addCriterion("tuistatus is null");
            return (Criteria) this;
        }

        public Criteria andTuistatusIsNotNull() {
            addCriterion("tuistatus is not null");
            return (Criteria) this;
        }

        public Criteria andTuistatusEqualTo(Integer value) {
            addCriterion("tuistatus =", value, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusNotEqualTo(Integer value) {
            addCriterion("tuistatus <>", value, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusGreaterThan(Integer value) {
            addCriterion("tuistatus >", value, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("tuistatus >=", value, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusLessThan(Integer value) {
            addCriterion("tuistatus <", value, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusLessThanOrEqualTo(Integer value) {
            addCriterion("tuistatus <=", value, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusIn(List<Integer> values) {
            addCriterion("tuistatus in", values, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusNotIn(List<Integer> values) {
            addCriterion("tuistatus not in", values, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusBetween(Integer value1, Integer value2) {
            addCriterion("tuistatus between", value1, value2, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andTuistatusNotBetween(Integer value1, Integer value2) {
            addCriterion("tuistatus not between", value1, value2, "tuistatus");
            return (Criteria) this;
        }

        public Criteria andIssaveIsNull() {
            addCriterion("issave is null");
            return (Criteria) this;
        }

        public Criteria andIssaveIsNotNull() {
            addCriterion("issave is not null");
            return (Criteria) this;
        }

        public Criteria andIssaveEqualTo(Integer value) {
            addCriterion("issave =", value, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveNotEqualTo(Integer value) {
            addCriterion("issave <>", value, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveGreaterThan(Integer value) {
            addCriterion("issave >", value, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveGreaterThanOrEqualTo(Integer value) {
            addCriterion("issave >=", value, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveLessThan(Integer value) {
            addCriterion("issave <", value, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveLessThanOrEqualTo(Integer value) {
            addCriterion("issave <=", value, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveIn(List<Integer> values) {
            addCriterion("issave in", values, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveNotIn(List<Integer> values) {
            addCriterion("issave not in", values, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveBetween(Integer value1, Integer value2) {
            addCriterion("issave between", value1, value2, "issave");
            return (Criteria) this;
        }

        public Criteria andIssaveNotBetween(Integer value1, Integer value2) {
            addCriterion("issave not between", value1, value2, "issave");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table endstatus
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table endstatus
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}